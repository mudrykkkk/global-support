import { serve } from 'https://deno.land/std@0.168.0/http/server.ts'

const corsHeaders = {
  'Access-Control-Allow-Origin': '*',
  'Access-Control-Allow-Headers': 'authorization, x-client-info, apikey, content-type',
  'Access-Control-Allow-Methods': 'POST, OPTIONS',
}

serve(async (req) => {
  // Handle CORS preflight requests
  if (req.method === 'OPTIONS') {
    return new Response('ok', { headers: corsHeaders })
  }

  try {
    const { name, phone, email, country, comment } = await req.json()

    // Validate required fields
    if (!name || !phone || !email || !country) {
      return new Response(
        JSON.stringify({ success: false, message: '–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è' }),
        { 
          status: 400, 
          headers: { ...corsHeaders, 'Content-Type': 'application/json' } 
        }
      )
    }

    console.log('üìã –ü–æ–ª—É—á–µ–Ω–∞ –∑–∞—è–≤–∫–∞:', { name, phone, email, country, comment })

    // Telegram credentials
    const TELEGRAM_BOT_TOKEN = '7891011050:AAFpuSSKu2lT_p1zVqWi42P-kNoCCWPxFBM'
    const TELEGRAM_CHAT_ID = '-1002818814568'

    // Format message
    const message = `üÜï –ù–û–í–ê–Ø –ó–ê–Ø–í–ö–ê

üë§ –ò–º—è: ${name}
üìû –¢–µ–ª–µ—Ñ–æ–Ω: ${phone}
‚úâÔ∏è Email: ${email}
üåç –°—Ç—Ä–∞–Ω–∞: ${country}
üí¨ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: ${comment || '–ù–µ —É–∫–∞–∑–∞–Ω'}

‚è∞ ${new Date().toLocaleString('ru-RU', { timeZone: 'Europe/Kiev' })}`

    console.log('üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ Telegram...')

    // Send to Telegram
    const telegramUrl = `https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage`
    
    const telegramResponse = await fetch(telegramUrl, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        chat_id: TELEGRAM_CHAT_ID,
        text: message,
        parse_mode: 'HTML'
      }),
    })

    const telegramResult = await telegramResponse.json()

    if (telegramResponse.ok) {
      console.log('‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Telegram —É—Å–ø–µ—à–Ω–æ!')
      return new Response(
        JSON.stringify({ success: true, message: '–ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!' }),
        { 
          headers: { ...corsHeaders, 'Content-Type': 'application/json' } 
        }
      )
    } else {
      console.error('‚ùå –û—à–∏–±–∫–∞ Telegram API:', telegramResult)
      return new Response(
        JSON.stringify({ success: false, message: '–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram' }),
        { 
          status: 500, 
          headers: { ...corsHeaders, 'Content-Type': 'application/json' } 
        }
      )
    }

  } catch (error) {
    console.error('üí• –û—à–∏–±–∫–∞ Edge Function:', error)
    return new Response(
      JSON.stringify({ success: false, message: '–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞' }),
      { 
        status: 500, 
        headers: { ...corsHeaders, 'Content-Type': 'application/json' } 
      }
    )
  }
})