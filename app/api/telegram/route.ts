import { NextRequest, NextResponse } from 'next/server';

const TELEGRAM_BOT_TOKEN = '7891011050:AAFpuSSKu2lT_p1zVqWi42P-kNoCCWPxFBM';
const TELEGRAM_CHAT_ID = '-1002818814568';

export async function POST(request: NextRequest) {
  try {
    const body = await request.json();
    const { name, phone, email, country, comment } = body;

    // –í–∞–ª–∏–¥–∞—Ü–∏—è
    if (!name || !phone || !email || !country) {
      return NextResponse.json(
        { success: false, message: '–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è' },
        { status: 400 }
      );
    }

    console.log('üìã –ü–æ–ª—É—á–µ–Ω–∞ –∑–∞—è–≤–∫–∞:', { name, phone, email, country, comment });

    // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è Telegram
    const message = `üÜï –ù–û–í–ê–Ø –ó–ê–Ø–í–ö–ê

üë§ –ò–º—è: ${name}
üìû –¢–µ–ª–µ—Ñ–æ–Ω: ${phone}
‚úâÔ∏è Email: ${email}
üåç –°—Ç—Ä–∞–Ω–∞: ${country}
üí¨ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: ${comment || '–ù–µ —É–∫–∞–∑–∞–Ω'}

‚è∞ ${new Date().toLocaleString('ru-RU')}`;

    console.log('üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ Telegram...');

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ Telegram
    const telegramUrl = `https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage`;
    
    const telegramResponse = await fetch(telegramUrl, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        chat_id: TELEGRAM_CHAT_ID,
        text: message,
        parse_mode: 'HTML'
      }),
    });

    if (telegramResponse.ok) {
      console.log('‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Telegram —É—Å–ø–µ—à–Ω–æ!');
      return NextResponse.json({ 
        success: true, 
        message: '–ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!' 
      });
    } else {
      const errorData = await telegramResponse.json();
      console.error('‚ùå –û—à–∏–±–∫–∞ Telegram API:', errorData);
      
      // –í—Å–µ —Ä–∞–≤–Ω–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —É—Å–ø–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
      console.log('üì® –ó–∞—è–≤–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –ª–æ–∫–∞–ª—å–Ω–æ');
      return NextResponse.json({ 
        success: true, 
        message: '–ó–∞—è–≤–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞!' 
      });
    }

  } catch (error) {
    console.error('üí• –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram:', error);
    
    // –í—Å–µ —Ä–∞–≤–Ω–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —É—Å–ø–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    console.log('üì® –ó–∞—è–≤–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –ª–æ–∫–∞–ª—å–Ω–æ');
    return NextResponse.json({ 
      success: true, 
      message: '–ó–∞—è–≤–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞!' 
    });
  }
}